extends layout.pug

block content
    #map
    #leg_title 
        span#leg_items Map Legend
    #leg
        each feature in features
            input(id=feature.toObject().id, type='checkbox', checked)
            span#leg_items #{feature.toObject().properties.name}
            br
    script(type='text/javascript').
        var map = L.map('map').setView([#{lat},#{lng}], 14);
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        
        $.getJSON('/map/layers',function(result){
            $.each(result, function(i, mlayer){
                $.getJSON('/map/layers/' + mlayer.id, function(data) { addLayer(data, mlayer.id); });
            });
        });
  
        function addLayer(layer, id) {
            var leaf_layer;
            if (layer.type == "Feature") {
                var geoType = layer.geometry.type;
                // Kijk naar Geometry type en set de juiste layer
                switch(geoType) {
                    case 'LineString':
                        leaf_layer = L.geoJson(layer);
                        leaf_layer.bindPopup(layer.properties.name);
                        leaf_layer.addTo(map); 
                        break;
                    case 'MultiPoint':
                        leaf_layer = L.geoJson(layer);
                        leaf_layer.bindPopup(layer.properties.name);
                        leaf_layer.addTo(map); 
                        break;
                    default:
                        //do noting for other documents in collection 
                }
            }
            
            $('#' + id).click(function(e) {
                
                if (map.hasLayer(leaf_layer)) {
                    map.removeLayer(leaf_layer);
                } else {
                    map.addLayer(leaf_layer);
                }
            });
        }